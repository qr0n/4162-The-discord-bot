{"780835623006240809": "\nDeveloper Commands:\n  aload           Loads a cog.\n  aunload         Unload a cog.\n  listcogs        Returns a list of all enabled commands.\n  reload          Reloads a cog.\nEmergency Use ONLY:\n  areload         Reloads a cog.\nGit:\n  comment         Comment on a Github Issue\n  issue           View an issue from Github!\n  makeissue       Create an issue! `{p}makeissue <title> | <body>`\n  suggest         Create an issue! `{p}makeissue <short summary> | <details>`\nVerrus 2.0:\n  a               \n  pin             \n  ranmem          \n  reminder        \n  tier            \nVerrus:\n  _8ball          \n  add             \n  ascii           \n  ban             \n  clear           \n  divide          \n  kick            \n  lock            \n  minus           \n  multiply        \n  snipe           \n  unlock          \nmusic_cog:\n  play            Plays a selected song from youtube\n  queue           Displays the current songs in queue\n  skip            Skips the current song being played\n\u200bNo Category:\n  CEPLIDify       \n  add_banned_nick \n  add_tag         \n  aproove         \n  blacklist       \n  cbc             \n  changeprefix    \n  channelinfo     \n  everything      \n  get_json        \n  help            Shows this message\n  jsn             \n  linkify         \n  lo              \n  logout          \n  mcode           \n  mute            \n  p               Get the bot's current websocket and API latency.\n  ping            \n  restartBot      \n  server_tag      \n  set_logging     \n  settopic        \n  slot            \n  switch          \n  tag             \n  toggle          \n  trustat         \n  tts             \n  unblacklist     \n  unlock_all      \n  unmute          \n  update          \n  upload          \n  vc_config       \n  wta             \n  ytsearch        \n\nType !help command for more info on a command.\nYou can also type !help category for more info on a category.\n", "578789460141932555": "\nimport discord\nimport asyncio\nfrom discord.ext import commands\n\nclass cog_name(commands.Cog):\n    def __init__(self, bot):\n        self.bot = bot\n\n@commands.command(name=\"hac\")\nasync def _a(self, ctx):\n  await self.bot.say(\"yea\")\n\ndef setup(bot):\n    bot.add_cog(cog_name(bot))\n"}